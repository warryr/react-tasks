{"version":3,"sources":["img/about-agile.svg","img/about-expertise.svg","img/about-learning.svg","img/about-positive.svg","img/about-technologies.svg","views/Counter/styles.js","views/Counter/index.js","containers/CounterContainer.js","views/ParentCounter/styles.js","views/ParentCounter/index.js","containers/ParentCounterContainer.js","views/Tabs/styles.js","views/Tabs/index.js","containers/TabsContainer.js","views/About/styles.js","views/About/index.js","containers/AboutContainer.js","views/Error/styles.js","views/Error/index.js","containers/ErrorContainer.js","views/Login/styles.js","views/Login/index.js","util/validateField.js","containers/LoginContainer.js","views/LoginRedux/styles.js","views/LoginRedux/index.js","actions/actionTypes.js","actions/actionCreators.js","containers/LoginReduxContainer.js","views/LoginReduxSuccess/index.js","containers/LoginReduxSuccessContainer.js","views/LoginReduxForm/styles.js","views/LoginReduxForm/index.js","containers/LoginReduxFormContainer.js","App.js","serviceWorker.js","reducers/Store.js","reducers/InputReducer.js","reducers/ValidationReducer.js","reducers/LoginReducer.js","index.js"],"names":["module","exports","__webpack_require__","p","useStyles","makeStyles","theme","defaultButton","margin","spacing","color","h3","Counter","props","classes","react_default","a","createElement","Container","fixed","Typography","component","variant","className","value","Button","onClick","increment","ableToDec","decrement","disabled","reset","CounterContainer","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","incrementCounter","setState","state","counter","ableToDecrement","initialState","decrementCounter","resetCounter","console","log","id","prevProps","prevState","snapshot","nextProps","nextContext","executed","undefined","mustReset","nextState","bool","views_Counter","React","Component","button","h4","ParentCounter","onAdd","ableToDel","onDelete","onReset","ParentCounterContainer","onAddCounter","counters","lastId","concat","toConsumableArray","ableToDelete","childMustReset","executedOperation","onDeleteCounter","array","splice","objectSpread","onResetCounters","length","_this2","views_ParentCounter","map","CounterContainer_CounterContainer","key","root","flexGrow","backgroundColor","palette","background","paper","views_Tabs","_React$useState","useState","_React$useState2","slicedToArray","setValue","AppBar","position","Tabs","onChange","event","newValue","Tab","label","Link","to","TabsContainer","containerBox","display","justifyContent","flexWrap","contentBox","flexDirection","alignItems","width","grey","paragraph","image","height","About","Box","src","aboutAgile","alt","aboutExpertise","aboutLearning","aboutPositive","aboutTechnologies","AboutContainer","views_About","Error","ErrorContainer","views_Error","@global","body","common","white","marginTop","form","submit","logBox","hint","textAlign","fontSize","red","Login","maxWidth","CssBaseline","noValidate","TextField","name","fullWidth","autoFocus","required","error","emailError","displayInput","hidden","type","passwordError","login","emailValue","passwordValue","data","validateField","arguments","LoginContainer","displayInputValue","email","document","getElementById","password","currentEmailValue","currentPasswordValue","emailValid","passwordValid","handleLogin","e","preventDefault","loggedInData","JSON","stringify","resetState","views_Login","LoginRedux","inputActionTypes","validationActionTypes","loginActionTypes","setEmailValidation","payload","setPasswordValidation","setLoginEmail","setLoginPassword","cleanValidationState","LoginReduxContainer","setCurrentEmail","setCurrentPassword","currentEmail","currentPassword","history","push","cleanState","views_LoginRedux","connect","currentInput","validation","loggedInEmail","loggedInPassword","dispatch","valid","LoginReduxSuccess","LoginReduxSuccessContainer","views_LoginReduxSuccess","renderTextField","_ref","input","custom","objectWithoutProperties","assign","LoginReduxForm","onSubmit","handleSubmit","Field","reduxForm","LoginReduxFormContainer","values","views_LoginReduxForm","selector","formValueSelector","App","react_router_dom","basename","process","react_router","path","exact","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","formReducer","store","createStore","ReactDOM","render","Provider","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cef8afa6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about-agile.e235092b.svg\";","module.exports = __webpack_public_path__ + \"static/media/about-expertise.1c9c249c.svg\";","module.exports = __webpack_public_path__ + \"static/media/about-learning.8b3a1e36.svg\";","module.exports = __webpack_public_path__ + \"static/media/about-positive.0b75384a.svg\";","module.exports = __webpack_public_path__ + \"static/media/about-technologies.9e3906a1.svg\";","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  defaultButton: {\r\n    margin: theme.spacing(1, 2),\r\n    color: 'default',\r\n  },\r\n  h3: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useStyles } from './styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Counter = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container fixed>\r\n      <Typography component='h1' variant='h3' className={classes.h3}>\r\n        {props.value}\r\n      </Typography>\r\n      <Button\r\n        variant='contained'\r\n        className={classes.defaultButton}\r\n        onClick={props.increment}>\r\n        Increment\r\n      </Button>\r\n      {props.ableToDec ? (\r\n        <Button\r\n          variant='contained'\r\n          className={classes.defaultButton}\r\n          onClick={props.decrement}>\r\n          Decrement\r\n        </Button>\r\n      ) : (\r\n        <Button variant='contained' className={classes.defaultButton} disabled>\r\n          Decrement\r\n        </Button>\r\n      )}\r\n      <Button\r\n        variant='contained'\r\n        className={classes.defaultButton}\r\n        onClick={props.reset}>\r\n        Reset\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nCounter.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n  increment: PropTypes.func.isRequired,\r\n  decrement: PropTypes.func.isRequired,\r\n  reset: PropTypes.func.isRequired,\r\n  ableToDec: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Counter;\r\n","import React from 'react';\r\nimport Counter from '../views/Counter';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default class CounterContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      counter: 0,\r\n      ableToDecrement: false,\r\n      initialState: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Counter ' + this.props.id + ': componentDidMount');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Counter ' + this.props.id + ': componentWillUnmount');\r\n  }\r\n\r\n  /*static getDerivedStateFromProps(props, state) {\r\n    console.log('Counter ' + props.id + ': getDerivedStateFromProps');\r\n    return state;\r\n  }\r\n\r\n  getSnapshotBeforeUpdate(prevProps, prevState) {\r\n    console.log('Counter ' + this.props.id + ': getSnapshotBeforeUpdate');\r\n    return null;\r\n  }*/\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    console.log('Counter ' + this.props.id + ': componentDidUpdate');\r\n    if (this.state.counter === 0 && this.state.ableToDecrement) {\r\n      this.setState({\r\n        ableToDecrement: false,\r\n        initialState: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\r\n    if (nextProps.executed === 'add') {\r\n      console.log(\r\n        'Counter ' + this.props.id + ': UNSAFE_componentWillReceiveProps'\r\n      );\r\n      return this.state.counter % 2 === 0 ? this.incrementCounter() : undefined;\r\n    }\r\n\r\n    if (nextProps.executed === 'delete') {\r\n      console.log(\r\n        'Counter ' + this.props.id + ': UNSAFE_componentWillReceiveProps'\r\n      );\r\n      return this.state.counter % 2 === 1 ? this.decrementCounter() : undefined;\r\n    }\r\n\r\n    if (\r\n      nextProps.mustReset &&\r\n      (!this.props.mustReset || !this.state.initialState)\r\n    ) {\r\n      console.log(\r\n        'Counter ' + this.props.id + ': UNSAFE_componentWillReceiveProps'\r\n      );\r\n      this.resetCounter();\r\n    }\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    const bool =\r\n      nextState.counter !== this.state.counter ||\r\n      nextState.ableToDecrement !== this.state.ableToDecrement;\r\n    console.log(\r\n      'Counter ' + this.props.id + ': shouldComponentUpdate: ' + bool\r\n    );\r\n    return bool;\r\n  }\r\n\r\n  incrementCounter = () => {\r\n    this.setState(state => ({\r\n      counter: state.counter + 1,\r\n      ableToDecrement: true,\r\n      initialState: false,\r\n    }));\r\n  };\r\n\r\n  decrementCounter = () => {\r\n    if (this.state.ableToDecrement) {\r\n      this.setState(state => ({\r\n        counter: state.counter - 1,\r\n      }));\r\n    }\r\n  };\r\n\r\n  resetCounter = () => {\r\n    this.setState({\r\n      counter: 0,\r\n      ableToDecrement: false,\r\n      initialState: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log('Counter ' + this.props.id + ': render');\r\n    return (\r\n      <Counter\r\n        value={this.state.counter}\r\n        increment={this.incrementCounter}\r\n        decrement={this.decrementCounter}\r\n        reset={this.resetCounter}\r\n        ableToDec={this.state.ableToDecrement}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nCounterContainer.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  mustReset: PropTypes.bool,\r\n  executed: PropTypes.string.isRequired,\r\n};\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  button: {\r\n    margin: theme.spacing(1, 2),\r\n  },\r\n  h4: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useStyles } from './styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst ParentCounter = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container fixed>\r\n      <Typography component='h1' variant='h4' className={classes.h4}>\r\n        Parent Counter\r\n      </Typography>\r\n      <Button\r\n        variant='contained'\r\n        color='primary'\r\n        className={classes.button}\r\n        onClick={props.onAdd}>\r\n        Add counter\r\n      </Button>\r\n      {props.ableToDel ? (\r\n        <Button\r\n          variant='contained'\r\n          color='secondary'\r\n          className={classes.button}\r\n          onClick={props.onDelete}>\r\n          Delete first counter\r\n        </Button>\r\n      ) : (\r\n        <Button\r\n          variant='contained'\r\n          color='secondary'\r\n          className={classes.button}\r\n          disabled>\r\n          Delete first counter\r\n        </Button>\r\n      )}\r\n      <Button\r\n        variant='contained'\r\n        color='default'\r\n        className={classes.button}\r\n        onClick={props.onReset}>\r\n        Reset counters\r\n      </Button>\r\n    </Container>\r\n  );\r\n};\r\n\r\nParentCounter.propTypes = {\r\n  onAdd: PropTypes.func.isRequired,\r\n  onDelete: PropTypes.func.isRequired,\r\n  onReset: PropTypes.func.isRequired,\r\n  ableToDel: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default ParentCounter;\r\n","import React from 'react';\r\nimport CounterContainer from './CounterContainer';\r\nimport ParentCounter from '../views/ParentCounter';\r\n\r\nexport default class ParentCounterContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      counters: [{ id: 1 }],\r\n      lastId: 1,\r\n      ableToDelete: false,\r\n      childMustReset: true,\r\n      executedOperation: 'reset',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log('Parent: componentDidMount');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    console.log('Parent: componentWillUnmount');\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n    console.log('Parent: shouldComponentUpdate');\r\n    return true;\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    console.log('Parent: componentDidUpdate');\r\n    if (this.state.counters.length === 1 && this.state.ableToDelete) {\r\n      this.setState({\r\n        ableToDelete: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  onAddCounter = () => {\r\n    this.setState(state => ({\r\n      counters: [{ id: state.lastId + 1 }, ...state.counters],\r\n      lastId: state.lastId + 1,\r\n      ableToDelete: true,\r\n      childMustReset: false,\r\n      executedOperation: 'add',\r\n    }));\r\n  };\r\n\r\n  onDeleteCounter = () => {\r\n    if (this.state.ableToDelete) {\r\n      this.setState(state => {\r\n        const array = state.counters;\r\n        array.splice(0, 1);\r\n        console.log('Counter ' + state.lastId + ' deleted');\r\n        return {\r\n          ...state,\r\n          counters: array,\r\n          executedOperation: 'delete',\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  onResetCounters = () => {\r\n    this.setState({\r\n      counters: [{ id: 1 }],\r\n      lastId: 1,\r\n      ableToDelete: false,\r\n      childMustReset: true,\r\n      executedOperation: 'reset',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log('Parent: render');\r\n    return (\r\n      <div>\r\n        <ParentCounter\r\n          onAdd={this.onAddCounter}\r\n          onDelete={this.onDeleteCounter}\r\n          onReset={this.onResetCounters}\r\n          ableToDel={this.state.ableToDelete}\r\n        />\r\n        {this.state.counters.map(counter => {\r\n          return counter.id === 1 ? (\r\n            <CounterContainer\r\n              key={counter.id}\r\n              id={counter.id}\r\n              mustReset={this.state.childMustReset}\r\n              executed={this.state.executedOperation}\r\n            />\r\n          ) : (\r\n            <CounterContainer\r\n              key={counter.id}\r\n              id={counter.id}\r\n              executed={this.state.executedOperation}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useStyles } from './styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nexport default () => {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position='static'>\r\n        <Tabs value={value} onChange={handleChange}>\r\n          <Tab value={false} />\r\n          <Tab label='О нас' component={Link} to='/about' />\r\n          <Tab label='Счетчики' component={Link} to='/counters' />\r\n          <Tab label='Войти' component={Link} to='/login' />\r\n          <Tab\r\n            label='Войти с помощью redux'\r\n            component={Link}\r\n            to='/login-redux'\r\n          />\r\n          <Tab\r\n            label='Войти с помощью redux-form'\r\n            component={Link}\r\n            to='/login-redux-form'\r\n          />\r\n        </Tabs>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport Tabs from '../views/Tabs';\r\n\r\nexport default class TabsContainer extends React.Component {\r\n  render() {\r\n    return <Tabs />;\r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport grey from '@material-ui/core/colors/grey';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  containerBox: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  contentBox: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    width: '29%',\r\n    margin: theme.spacing(5, 2),\r\n    color: grey[700],\r\n  },\r\n  h4: {\r\n    margin: theme.spacing(3),\r\n  },\r\n  paragraph: {\r\n    margin: theme.spacing(2, 0),\r\n  },\r\n  image: {\r\n    width: '100px',\r\n    height: '100px',\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { useStyles } from './styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport Box from '@material-ui/core/Box';\r\nimport aboutAgile from '../../img/about-agile.svg';\r\nimport aboutExpertise from '../../img/about-expertise.svg';\r\nimport aboutLearning from '../../img/about-learning.svg';\r\nimport aboutPositive from '../../img/about-positive.svg';\r\nimport aboutTechnologies from '../../img/about-technologies.svg';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst About = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container fixed>\r\n      <Typography component='h1' variant='h4' className={classes.h4}>\r\n        Преимущества iTechArt\r\n      </Typography>\r\n      <Box className={classes.containerBox}>\r\n        <Box component='div' className={classes.contentBox}>\r\n          <img src={aboutAgile} alt='About agile' className={classes.image} />\r\n          <Typography component='p' variant='h6' className={classes.paragraph}>\r\n            Мы придерживаемся гибкого подхода как в менеджменте, так и в\r\n            реализации новых идей\r\n          </Typography>\r\n        </Box>\r\n        <Box component='div' className={classes.contentBox}>\r\n          <img\r\n            src={aboutExpertise}\r\n            alt='About expertise'\r\n            className={classes.image}\r\n          />\r\n          <Typography component='p' variant='h6' className={classes.paragraph}>\r\n            У нас работают Remarkable People – высококлассные специалисты с\r\n            глубокой технической экспертизой\r\n          </Typography>\r\n        </Box>\r\n        <Box component='div' className={classes.contentBox}>\r\n          <img\r\n            src={aboutLearning}\r\n            alt='About learning'\r\n            className={classes.image}\r\n          />\r\n          <Typography component='p' variant='h6' className={classes.paragraph}>\r\n            Мы, как и наши западные заказчики, предпочитаем новые технологии\r\n          </Typography>\r\n        </Box>\r\n        <Box component='div' className={classes.contentBox}>\r\n          <img\r\n            src={aboutPositive}\r\n            alt='About positive'\r\n            className={classes.image}\r\n          />\r\n          <Typography component='p' variant='h6' className={classes.paragraph}>\r\n            Мы любим учиться и делиться своими знаниями\r\n          </Typography>\r\n        </Box>\r\n        <Box component='div' className={classes.contentBox}>\r\n          <img\r\n            src={aboutTechnologies}\r\n            alt='About technologies'\r\n            className={classes.image}\r\n          />\r\n          <Typography component='p' variant='h6' className={classes.paragraph}>\r\n            У нас в компании доброжелательная и творческая атмосфера\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\nimport About from '../views/About';\r\n\r\nexport default class AboutContainer extends React.Component {\r\n  render() {\r\n    return <About />;\r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  h4: {\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { useStyles } from './styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst Error = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography component='h1' variant='h4' className={classes.h4}>\r\n      404 - страница не найдена\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React from 'react';\r\nimport Error from '../views/Error';\r\n\r\nexport default class ErrorContainer extends React.Component {\r\n  render() {\r\n    return <Error />;\r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  logBox: {\r\n    margin: theme.spacing(2),\r\n    color: grey[500],\r\n  },\r\n  hint: {\r\n    textAlign: 'left',\r\n    fontSize: '14px',\r\n    color: red[500],\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useStyles } from './styles';\r\n\r\nconst Login = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <form id='form' className={classes.form} noValidate>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            id='email'\r\n            name='email'\r\n            label='Почта'\r\n            fullWidth\r\n            autoFocus\r\n            required\r\n            error={props.emailError}\r\n            onChange={props.displayInput}\r\n          />\r\n          <Typography className={classes.hint} hidden={!props.emailError}>\r\n            Минимум 6 символов\r\n          </Typography>\r\n\r\n          <TextField\r\n            type='password'\r\n            variant='outlined'\r\n            margin='normal'\r\n            id='password'\r\n            name='password'\r\n            label='Пароль'\r\n            fullWidth\r\n            required\r\n            error={props.passwordError}\r\n            onChange={props.displayInput}\r\n          />\r\n          <Typography className={classes.hint} hidden={!props.passwordError}>\r\n            Минимум 6 символов\r\n          </Typography>\r\n\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            color='primary'\r\n            fullWidth\r\n            className={classes.submit}\r\n            onClick={props.login}>\r\n            Войти\r\n          </Button>\r\n        </form>\r\n\r\n        <Box className={classes.logBox}>\r\n          <Typography>Введенная почта: {props.emailValue}</Typography>\r\n          <Typography>Введенный пароль: {props.passwordValue}</Typography>\r\n        </Box>\r\n\r\n        <Box className={classes.logBox} hidden={props.data === ''}>\r\n          <Typography>Данные из формы: {props.data}</Typography>\r\n        </Box>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  displayInput: PropTypes.func.isRequired,\r\n  emailValue: PropTypes.string.isRequired,\r\n  passwordValue: PropTypes.string.isRequired,\r\n  emailError: PropTypes.bool.isRequired,\r\n  passwordError: PropTypes.bool.isRequired,\r\n  data: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Login;\r\n","const validateField = (string = '') => {\r\n  return string.length > 5;\r\n};\r\n\r\nexport default validateField;\r\n","import React from 'react';\r\nimport Login from '../views/Login';\r\nimport validateField from '../util/validateField';\r\n\r\nexport default class LoginContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentEmailValue: '',\r\n      currentPasswordValue: '',\r\n      emailValid: false,\r\n      passwordValid: false,\r\n      emailError: false,\r\n      passwordError: false,\r\n      loggedInData: '',\r\n    };\r\n  }\r\n\r\n  displayInputValue = () => {\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n\r\n    this.setState({\r\n      currentEmailValue: email,\r\n      currentPasswordValue: password,\r\n      emailValid: validateField(email),\r\n      passwordValid: validateField(password),\r\n    });\r\n  };\r\n\r\n  handleLogin = e => {\r\n    e.preventDefault();\r\n\r\n    this.setState(state => ({\r\n      emailError: !state.emailValid,\r\n      passwordError: !state.passwordValid,\r\n    }));\r\n\r\n    if (this.state.emailValid && this.state.passwordValid) {\r\n      console.log('Введенная почта: ' + this.state.currentEmailValue);\r\n      console.log('Введенный пароль: ' + this.state.currentPasswordValue);\r\n\r\n      this.setState(state => ({\r\n        loggedInData: JSON.stringify({\r\n          email: state.currentEmailValue,\r\n          password: state.currentPasswordValue,\r\n        }),\r\n      }));\r\n\r\n      document.getElementById('form').reset();\r\n      this.resetState();\r\n    }\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({\r\n      currentEmailValue: '',\r\n      currentPasswordValue: '',\r\n      emailValid: false,\r\n      passwordValid: false,\r\n      emailError: false,\r\n      passwordError: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Login\r\n        login={this.handleLogin}\r\n        displayInput={this.displayInputValue}\r\n        data={this.state.loggedInData}\r\n        emailValue={this.state.currentEmailValue}\r\n        passwordValue={this.state.currentPasswordValue}\r\n        emailError={this.state.emailError}\r\n        passwordError={this.state.passwordError}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import { makeStyles } from '@material-ui/core';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  logBox: {\r\n    margin: theme.spacing(2),\r\n    color: grey[500],\r\n  },\r\n  hint: {\r\n    textAlign: 'left',\r\n    fontSize: '14px',\r\n    color: red[500],\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useStyles } from './styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst LoginRedux = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <form id='reduxForm' className={classes.form} noValidate>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            id='reduxEmail'\r\n            name='email'\r\n            label='Почта'\r\n            fullWidth\r\n            autoFocus\r\n            required\r\n            error={props.emailError}\r\n            onChange={props.displayInput}\r\n          />\r\n          <Typography className={classes.hint} hidden={!props.emailError}>\r\n            Минимум 6 символов\r\n          </Typography>\r\n\r\n          <TextField\r\n            type='password'\r\n            variant='outlined'\r\n            margin='normal'\r\n            id='reduxPassword'\r\n            name='password'\r\n            label='Пароль'\r\n            fullWidth\r\n            required\r\n            error={props.passwordError}\r\n            onChange={props.displayInput}\r\n          />\r\n          <Typography className={classes.hint} hidden={!props.passwordError}>\r\n            Минимум 6 символов\r\n          </Typography>\r\n\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            color='primary'\r\n            fullWidth\r\n            className={classes.submit}\r\n            onClick={props.login}>\r\n            Войти\r\n          </Button>\r\n        </form>\r\n\r\n        <Box className={classes.logBox}>\r\n          <Typography>Введенная почта: {props.emailValue}</Typography>\r\n          <Typography>Введенный пароль: {props.passwordValue}</Typography>\r\n        </Box>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nLoginRedux.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  displayInput: PropTypes.func.isRequired,\r\n  emailValue: PropTypes.string.isRequired,\r\n  passwordValue: PropTypes.string.isRequired,\r\n  emailError: PropTypes.bool.isRequired,\r\n  passwordError: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default LoginRedux;\r\n","export const inputActionTypes = {\r\n  SET_CURRENT_EMAIL: 'SET_CURRENT_EMAIL',\r\n  SET_CURRENT_PASSWORD: 'SET_CURRENT_PASSWORD',\r\n  CLEAN_CURRENT_STATE: 'CLEAN_CURRENT_STATE',\r\n};\r\n\r\nexport const validationActionTypes = {\r\n  SET_EMAIL_VALIDATION: 'SET_EMAIL_VALIDATION',\r\n  SET_PASSWORD_VALIDATION: 'SET_PASSWORD_VALIDATION',\r\n  CLEAN_VALIDATION_STATE: 'CLEAN_VALIDATION_STATE',\r\n};\r\n\r\nexport const loginActionTypes = {\r\n  SET_LOGIN_EMAIL: 'SET_LOGIN_EMAIL',\r\n  SET_LOGIN_PASSWORD: 'SET_LOGIN_PASSWORD',\r\n};\r\n","import {\r\n  inputActionTypes,\r\n  loginActionTypes,\r\n  validationActionTypes,\r\n} from './actionTypes';\r\n\r\nexport const setCurrentEmail = email => {\r\n  return {\r\n    type: inputActionTypes.SET_CURRENT_EMAIL,\r\n    payload: email,\r\n  };\r\n};\r\n\r\nexport const setCurrentPassword = password => {\r\n  return {\r\n    type: inputActionTypes.SET_CURRENT_PASSWORD,\r\n    payload: password,\r\n  };\r\n};\r\n\r\nexport const setEmailValidation = bool => {\r\n  return {\r\n    type: validationActionTypes.SET_EMAIL_VALIDATION,\r\n    payload: bool,\r\n  };\r\n};\r\n\r\nexport const setPasswordValidation = bool => {\r\n  return {\r\n    type: validationActionTypes.SET_PASSWORD_VALIDATION,\r\n    payload: bool,\r\n  };\r\n};\r\n\r\nexport const setLoginEmail = email => {\r\n  return {\r\n    type: loginActionTypes.SET_LOGIN_EMAIL,\r\n    payload: email,\r\n  };\r\n};\r\n\r\nexport const setLoginPassword = password => {\r\n  return {\r\n    type: loginActionTypes.SET_LOGIN_PASSWORD,\r\n    payload: password,\r\n  };\r\n};\r\n\r\nexport const cleanCurrentState = () => {\r\n  return {\r\n    type: inputActionTypes.CLEAN_CURRENT_STATE,\r\n  };\r\n};\r\n\r\nexport const cleanValidationState = () => {\r\n  return {\r\n    type: validationActionTypes.CLEAN_VALIDATION_STATE,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LoginRedux from '../views/LoginRedux';\r\nimport {\r\n  setCurrentEmail,\r\n  setCurrentPassword,\r\n  setEmailValidation,\r\n  setPasswordValidation,\r\n  setLoginEmail,\r\n  setLoginPassword,\r\n  cleanCurrentState,\r\n  cleanValidationState,\r\n} from '../actions/actionCreators';\r\nimport validateField from '../util/validateField';\r\n\r\nclass LoginReduxContainer extends React.Component {\r\n  displayInputValue = () => {\r\n    const email = document.getElementById('reduxEmail').value;\r\n    const password = document.getElementById('reduxPassword').value;\r\n\r\n    this.props.setCurrentEmail(email);\r\n    this.props.setCurrentPassword(password);\r\n  };\r\n\r\n  handleLogin = e => {\r\n    e.preventDefault();\r\n\r\n    const currentEmail = this.props.currentEmailValue;\r\n    const currentPassword = this.props.currentPasswordValue;\r\n\r\n    const emailValid = validateField(currentEmail);\r\n    const passwordValid = validateField(currentPassword);\r\n\r\n    this.props.setEmailValidation(emailValid);\r\n    this.props.setPasswordValidation(passwordValid);\r\n\r\n    if (emailValid && passwordValid) {\r\n      this.props.setLoginEmail(currentEmail);\r\n      this.props.setLoginPassword(currentPassword);\r\n\r\n      this.props.history.push('/login-redux/success');\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.cleanState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LoginRedux\r\n        displayInput={this.displayInputValue}\r\n        login={this.handleLogin}\r\n        emailValue={this.props.currentEmailValue}\r\n        passwordValue={this.props.currentPasswordValue}\r\n        emailError={!this.props.emailValid}\r\n        passwordError={!this.props.passwordValid}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  currentEmailValue: state.currentInput.currentEmail,\r\n  currentPasswordValue: state.currentInput.currentPassword,\r\n  emailValid: state.validation.emailValid,\r\n  passwordValid: state.validation.passwordValid,\r\n  loggedInEmail: state.loggedInData.email,\r\n  loggedInPassword: state.loggedInData.password,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setCurrentEmail: email => dispatch(setCurrentEmail(email)),\r\n  setCurrentPassword: password => dispatch(setCurrentPassword(password)),\r\n  setEmailValidation: valid => dispatch(setEmailValidation(valid)),\r\n  setPasswordValidation: valid => dispatch(setPasswordValidation(valid)),\r\n  setLoginEmail: email => dispatch(setLoginEmail(email)),\r\n  setLoginPassword: password => dispatch(setLoginPassword(password)),\r\n  cleanState: () => {\r\n    dispatch(cleanCurrentState());\r\n    dispatch(cleanValidationState());\r\n  },\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginReduxContainer);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Container } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useStyles } from '../Login/styles';\r\n\r\nconst LoginReduxSuccess = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component='main' maxWidth='xs' className={classes.paper}>\r\n      <Typography component='p' variant='h5'>\r\n        Почта: {props.email}\r\n      </Typography>\r\n      <Typography component='p' variant='h5'>\r\n        Пароль: {props.password}\r\n      </Typography>\r\n    </Container>\r\n  );\r\n};\r\n\r\nLoginReduxSuccess.propTypes = {\r\n  email: PropTypes.string.isRequired,\r\n  password: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default LoginReduxSuccess;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LoginReduxSuccess from '../views/LoginReduxSuccess';\r\n\r\nclass LoginReduxSuccessContainer extends React.Component {\r\n  render() {\r\n    return (\r\n      <LoginReduxSuccess\r\n        email={this.props.email}\r\n        password={this.props.password}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  email: state.loggedInData.email,\r\n  password: state.loggedInData.password,\r\n});\r\n\r\nexport default connect(mapStateToProps)(LoginReduxSuccessContainer);\r\n","import { makeStyles } from '@material-ui/core';\r\nimport grey from '@material-ui/core/colors/grey';\r\nimport red from '@material-ui/core/colors/red';\r\n\r\nexport const useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n    },\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  logBox: {\r\n    margin: theme.spacing(2),\r\n    color: grey[500],\r\n  },\r\n  hint: {\r\n    textAlign: 'left',\r\n    fontSize: '14px',\r\n    color: red[500],\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { useStyles } from './styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst renderTextField = ({ input, ...custom }) => {\r\n  return (\r\n    <TextField\r\n      variant='outlined'\r\n      margin='normal'\r\n      {...input}\r\n      {...custom}\r\n      required\r\n      fullWidth\r\n    />\r\n  );\r\n};\r\n\r\nlet LoginReduxForm = props => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container component='main' maxWidth='xs'>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <form onSubmit={props.handleSubmit} className={classes.form} noValidate>\r\n          <Field\r\n            name='email'\r\n            component={renderTextField}\r\n            label='Почта'\r\n            error={props.emailError}\r\n          />\r\n          <Typography className={classes.hint} hidden={!props.emailError}>\r\n            Минимум 6 символов\r\n          </Typography>\r\n\r\n          <Field\r\n            type='password'\r\n            name='password'\r\n            component={renderTextField}\r\n            label='Пароль'\r\n            error={props.passwordError}\r\n          />\r\n          <Typography className={classes.hint} hidden={!props.passwordError}>\r\n            Минимум 6 символов\r\n          </Typography>\r\n\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            color='primary'\r\n            fullWidth\r\n            className={classes.submit}\r\n            onClick={props.login}>\r\n            Войти\r\n          </Button>\r\n        </form>\r\n\r\n        <Box className={classes.logBox}>\r\n          <Typography>Введенная почта: {props.emailValue}</Typography>\r\n          <Typography>Введенный пароль: {props.passwordValue}</Typography>\r\n        </Box>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nLoginReduxForm = reduxForm({\r\n  form: 'loginForm',\r\n})(LoginReduxForm);\r\n\r\nLoginReduxForm.propTypes = {\r\n  handleSubmit: PropTypes.func,\r\n  emailValue: PropTypes.string.isRequired,\r\n  passwordValue: PropTypes.string.isRequired,\r\n  emailError: PropTypes.bool.isRequired,\r\n  passwordError: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default LoginReduxForm;\r\n","import React from 'react';\r\nimport LoginReduxForm from '../views/LoginReduxForm';\r\nimport { connect } from 'react-redux';\r\nimport { formValueSelector } from 'redux-form';\r\nimport validateField from '../util/validateField';\r\nimport {\r\n  setEmailValidation,\r\n  setPasswordValidation,\r\n  setLoginEmail,\r\n  setLoginPassword,\r\n  cleanValidationState,\r\n} from '../actions/actionCreators';\r\n\r\nclass LoginReduxFormContainer extends React.Component {\r\n  handleLogin = values => {\r\n    const email = values.email;\r\n    const password = values.password;\r\n\r\n    const emailValid = validateField(email);\r\n    const passwordValid = validateField(password);\r\n\r\n    this.props.setEmailValidation(emailValid);\r\n    this.props.setPasswordValidation(passwordValid);\r\n\r\n    if (emailValid && passwordValid) {\r\n      this.props.setLoginEmail(email);\r\n      this.props.setLoginPassword(password);\r\n\r\n      this.props.history.push('/login-redux-form/success');\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.props.cleanValidationState();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <LoginReduxForm\r\n        onSubmit={this.handleLogin}\r\n        emailValue={this.props.currentEmail}\r\n        passwordValue={this.props.currentPassword}\r\n        emailError={!this.props.emailValid}\r\n        passwordError={!this.props.passwordValid}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst selector = formValueSelector('loginForm');\r\n\r\nconst mapStateToProps = state => ({\r\n  currentEmail: selector(state, 'email') || '',\r\n  currentPassword: selector(state, 'password') || '',\r\n  emailValid: state.validation.emailValid,\r\n  passwordValid: state.validation.passwordValid,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  setEmailValidation: valid => dispatch(setEmailValidation(valid)),\r\n  setPasswordValidation: valid => dispatch(setPasswordValidation(valid)),\r\n  setLoginEmail: email => dispatch(setLoginEmail(email)),\r\n  setLoginPassword: password => dispatch(setLoginPassword(password)),\r\n  cleanValidationState: () => dispatch(cleanValidationState()),\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(LoginReduxFormContainer);\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect,\r\n} from 'react-router-dom';\r\nimport './App.css';\r\nimport ParentCounterContainer from './containers/ParentCounterContainer';\r\nimport TabsContainer from './containers/TabsContainer';\r\nimport AboutContainer from './containers/AboutContainer';\r\nimport ErrorContainer from './containers/ErrorContainer';\r\nimport LoginContainer from './containers/LoginContainer';\r\nimport LoginReduxContainer from './containers/LoginReduxContainer';\r\nimport LoginReduxSuccessContainer from './containers/LoginReduxSuccessContainer';\r\nimport LoginReduxFormContainer from './containers/LoginReduxFormContainer';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className='App'>\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <Switch>\r\n            <Route path='/404' exact component={null} />\r\n            <Route path='/' component={TabsContainer} />\r\n          </Switch>\r\n          <Switch>\r\n            <Route path='/' exact component={null} />\r\n            <Route path='/about' exact component={AboutContainer} />\r\n            <Route path='/counters' exact component={ParentCounterContainer} />\r\n            <Route path='/login' exact component={LoginContainer} />\r\n            <Route path='/login-redux' exact component={LoginReduxContainer} />\r\n            <Route\r\n              path='/login-redux/success'\r\n              exact\r\n              component={LoginReduxSuccessContainer}\r\n            />\r\n            <Route\r\n              path='/login-redux-form'\r\n              exact\r\n              component={LoginReduxFormContainer}\r\n            />\r\n            <Route\r\n              path='/login-redux-form/success'\r\n              exact\r\n              component={LoginReduxSuccessContainer}\r\n            />\r\n            <Route path='/404' exact component={ErrorContainer} />\r\n            <Redirect to='/404' />\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore, combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { LoginReducer } from './LoginReducer';\r\nimport { InputReducer } from './InputReducer';\r\nimport { ValidationReducer } from './ValidationReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  currentInput: InputReducer,\r\n  validation: ValidationReducer,\r\n  loggedInData: LoginReducer,\r\n  form: formReducer,\r\n});\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nexport default store;\r\n","import { inputActionTypes } from '../actions/actionTypes';\r\n\r\nconst getInitialState = () => ({\r\n  currentEmail: '',\r\n  currentPassword: '',\r\n});\r\n\r\nexport const InputReducer = (state = getInitialState(), action) => {\r\n  switch (action.type) {\r\n    case inputActionTypes.SET_CURRENT_EMAIL: {\r\n      return {\r\n        ...state,\r\n        currentEmail: action.payload,\r\n      };\r\n    }\r\n    case inputActionTypes.SET_CURRENT_PASSWORD: {\r\n      return {\r\n        ...state,\r\n        currentPassword: action.payload,\r\n      };\r\n    }\r\n    case inputActionTypes.CLEAN_CURRENT_STATE: {\r\n      return getInitialState();\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { validationActionTypes } from '../actions/actionTypes';\r\n\r\nconst getInitialState = () => ({\r\n  emailValid: true,\r\n  passwordValid: true,\r\n});\r\n\r\nexport const ValidationReducer = (state = getInitialState(), action) => {\r\n  switch (action.type) {\r\n    case validationActionTypes.SET_EMAIL_VALIDATION: {\r\n      return {\r\n        ...state,\r\n        emailValid: action.payload,\r\n      };\r\n    }\r\n    case validationActionTypes.SET_PASSWORD_VALIDATION: {\r\n      return {\r\n        ...state,\r\n        passwordValid: action.payload,\r\n      };\r\n    }\r\n    case validationActionTypes.CLEAN_VALIDATION_STATE: {\r\n      return getInitialState();\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { loginActionTypes } from '../actions/actionTypes';\r\n\r\nconst getInitialState = () => ({\r\n  emailError: false,\r\n  passwordError: false,\r\n});\r\n\r\nexport const LoginReducer = (state = getInitialState(), action) => {\r\n  switch (action.type) {\r\n    case loginActionTypes.SET_LOGIN_EMAIL: {\r\n      return {\r\n        ...state,\r\n        email: action.payload,\r\n      };\r\n    }\r\n    case loginActionTypes.SET_LOGIN_PASSWORD: {\r\n      return {\r\n        ...state,\r\n        password: action.payload,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './reducers/Store';\nimport Provider from 'react-redux/es/components/Provider';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}